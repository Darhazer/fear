module Fear
  module Extractor
    # This module contains syntax nodes for GrammarParser
    # generated by +treetop+.
    module Grammar
      class Node < Treetop::Runtime::SyntaxNode
        def show_position
          "#{input}\n" \
          "#{'~' * interval.first}^"
        end
      end

      class ArrayLiteral < Node
        def to_matcher
          non_empty_elements = elements.slice(1...-1).reject(&:empty?)
          ArrayMatcher.new(
            elements: non_empty_elements.flat_map(&:to_matcher),
            node: self,
          )
        end
      end

      class ArrayValueList < Node
        def to_matcher
          elements.flat_map(&:to_matcher)
        end
      end

      class Expression < Node
      end

      class ArrayValue < Node
        def to_matcher
          elements[1].to_matcher
        end
      end

      class Expression < Node
      end

      class FloatLiteral < Node
        def value
          text_value.to_f
        end
      end

      class IntegerLiteral < Node
        def to_matcher
          IntegerMatcher.new(value: value, node: self)
        end

        def value
          text_value.to_i
        end
      end

      class StringLiteral < Node
        def value
          text_value
        end
      end
    end
  end
end
